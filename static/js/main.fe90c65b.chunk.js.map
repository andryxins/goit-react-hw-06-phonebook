{"version":3,"sources":["redux/contactReducer/contactActionsType.js","redux/localStorageActions.js","redux/contactReducer/contactsActions.js","redux/contactReducer/contactReducer.js","redux/filterReducer/filterActions.js","redux/filterReducer/filterActionType.js","redux/filterReducer/filterReducer.js","redux/rootReducer.js","redux/store.js","components/Section/Section.js","components/PhoneBookFields/PhoneBookFields.js","components/PhoneBookList/PhoneBookList.js","components/PhoneBookSearchField/PhoneBookSearchField.js","components/PhoneBookLogo/PhoneBookLogo.js","App/App.js","App/AppContainer.js","index.js","Transitions/slideTransition.module.css","components/PhoneBookFields/PhoneBookFields.module.css","components/PhoneBookList/PhoneBookList.module.css","components/Section/Section.module.css","components/PhoneBookSearchField/PhoneBookSearchField.module.css","components/PhoneBookLogo/PhoneBookLogo.module.css"],"names":["getLocalStorageItems","persistedState","localStorage","getItem","JSON","parse","e","console","log","addContact","createAction","actionsTypes","deleteContact","getLocalStorageData","createAsyncThunk","a","persistedData","contactReducer","createReducer","state","action","payload","filter","item","id","fulfilled","changeQuery","filterReducer","rootReducer","combineReducers","contacts","store","configureStore","reducer","dispatch","subscribe","dataToUpdate","stringify","setItem","updateLocalStorage","getState","Section","title","isActive","children","CSSTransition","in","timeout","classNames","slideTransition","mountOnEnter","unmountOnExit","className","Styles","container","validationSchema","Yup","shape","name","max","min","required","number","matches","PhoneBookFields","onSubmit","initialValues","values","actions","resetForm","props","touched","errors","handleChange","handleBlur","inputLabel","htmlFor","invalidMessage","inputFieldError","inputField","type","value","onChange","onBlur","placeholder","Btn","icon","checkCircle","color","width","height","PhoneBookList","onDelete","isLoading","TransitionGroup","component","map","transitionsStyle","listItem","key","onClick","xIcon","PhoneBookSearchField","searchField","PhoneBookLogo","setTimeout","setState","this","logo","Component","checkContactForUnique","contactsArr","newContact","some","toLowerCase","toast","configure","App","handleSubmit","obj","onAddContact","phoneBookItems","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","uuidv4","target","onChangeQuery","query","onDeleteContact","filterQuery","filteredContacts","includes","length","connect","contactsActions","text","filterActions","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fe90c65b.chunk.js","sourcesContent":["export default {\n  GET_CONTACTS_FROM_LOCAL_STORAGE: 'GET_CONTACTS_FROM_LOCAL_STORAGE',\n  ADD_NEW_CONTACT: 'ADD_CONTACT',\n  DELETE_CONTACT: 'DELETE_CONTACT',\n};\n","export const getLocalStorageItems = () => {\n  try {\n    const persistedState = localStorage.getItem('contacts');\n    if (persistedState) return [...JSON.parse(persistedState)];\n    return [];\n  } catch (e) {\n    console.log(e);\n    return [];\n  }\n};\n\nexport const updateLocalStorage = contacts => {\n  try {\n    const dataToUpdate = JSON.stringify(contacts);\n    localStorage.setItem('contacts', dataToUpdate);\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import actionsTypes from './contactActionsType';\nimport { getLocalStorageItems } from '../localStorageActions';\nimport { createAction, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const addContact = createAction(actionsTypes.ADD_NEW_CONTACT);\n\nexport const deleteContact = createAction(actionsTypes.DELETE_CONTACT);\n\nexport const getLocalStorageData = createAsyncThunk(\n  actionsTypes.GET_CONTACTS_FROM_LOCAL_STORAGE,\n  async () => {\n    const persistedData = await getLocalStorageItems();\n    return [...persistedData];\n  },\n);\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  getLocalStorageData,\n  addContact,\n  deleteContact,\n} from './contactsActions';\n\nconst contactReducer = createReducer([], {\n  [addContact]: (state, action) => [...state, action.payload],\n  [deleteContact]: (state, action) =>\n    state.filter(item => item.id !== action.payload),\n  [getLocalStorageData.fulfilled]: (state, action) => [\n    ...state,\n    ...action.payload,\n  ],\n});\n\nexport default contactReducer;\n","import actionTypes from './filterActionType';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const changeQuery = createAction(actionTypes.CHANGE_QUERY);\n","export default {\n  CHANGE_QUERY: 'CHANGE_QUERY',\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport { changeQuery } from './filterActions';\n\nconst filterReducer = createReducer('', {\n  [changeQuery]: (state, action) => action.payload,\n});\n\nexport default filterReducer;\n","import { combineReducers } from 'redux';\nimport contactReducer from './contactReducer/contactReducer';\nimport filterReducer from './filterReducer/filterReducer';\n\nconst rootReducer = combineReducers({\n  contacts: contactReducer,\n  filter: filterReducer,\n});\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './rootReducer';\nimport { getLocalStorageData } from './contactReducer/contactsActions';\nimport { updateLocalStorage } from './localStorageActions';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nstore.dispatch(getLocalStorageData());\n\nstore.subscribe(() => updateLocalStorage(store.getState().contacts));\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport Styles from './Section.module.css';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\n\nconst Section = ({ title = '', isActive, children }) => {\n  return (\n    <CSSTransition\n      in={isActive}\n      timeout={500}\n      classNames={slideTransition}\n      mountOnEnter\n      unmountOnExit\n    >\n      <section className={Styles.container}>\n        <h1 className={Styles.title}>{title}</h1>\n        {children}\n      </section>\n    </CSSTransition>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from '@iconify/react';\nimport { CSSTransition } from 'react-transition-group';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\nimport checkCircle from '@iconify/icons-cil/check-circle';\nimport Styles from './PhoneBookFields.module.css';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .max(20, 'Must be 20 characters or less')\n    .min(2, 'Must be 2 characters or more')\n    .required('Required'),\n  number: Yup.string()\n    .matches(\n      /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{2}(-|\\s)\\d{2}$/,\n      'Telephone number should be like: 000-00-00',\n    )\n    .required('Required'),\n});\n\nconst PhoneBookFields = ({ onSubmit }) => (\n  <>\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={(values, actions) => {\n        onSubmit(values) && actions.resetForm();\n      }}\n      validationSchema={validationSchema}\n    >\n      {props => {\n        const { values, touched, errors, handleChange, handleBlur } = props;\n        return (\n          <Form className={Styles.container}>\n            <label className={Styles.inputLabel} htmlFor=\"name\">\n              Name\n            </label>\n\n            <CSSTransition\n              in={errors.name && touched.name}\n              classNames={slideTransition}\n              timeout={500}\n              mountOnEnter\n              unmountOnExit\n            >\n              <div className={Styles.invalidMessage}>{errors.name}</div>\n            </CSSTransition>\n\n            <Field\n              className={\n                errors.name && touched.name\n                  ? Styles.inputFieldError\n                  : Styles.inputField\n              }\n              type=\"text\"\n              value={values.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              name=\"name\"\n              placeholder=\"Put contact name\"\n            />\n\n            <label className={Styles.inputLabel} htmlFor=\"number\">\n              Number\n            </label>\n\n            {\n              <CSSTransition\n                in={errors.number && touched.number}\n                classNames={slideTransition}\n                timeout={500}\n                mountOnEnter\n                unmountOnExit\n              >\n                <div className={Styles.invalidMessage}>{errors.number}</div>\n              </CSSTransition>\n            }\n\n            <Field\n              className={\n                errors.number && touched.number\n                  ? Styles.inputFieldError\n                  : Styles.inputField\n              }\n              value={values.number}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Number format 000-00-00\"\n            />\n            <button type=\"submit\" className={Styles.Btn}>\n              <Icon\n                icon={checkCircle}\n                color=\"blue\"\n                width=\"70px\"\n                height=\"50px\"\n              />\n            </button>\n          </Form>\n        );\n      }}\n    </Formik>\n  </>\n);\n\nPhoneBookFields.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default PhoneBookFields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Icon } from '@iconify/react';\nimport xIcon from '@iconify/icons-cil/x';\nimport Styles from './PhoneBookList.module.css';\nimport transitionsStyle from '../../Transitions/slideTransition.module.css';\n\nconst PhoneBookList = ({ onDelete, contacts, isLoading }) => (\n  <TransitionGroup component=\"ul\" className={Styles.container}>\n    {contacts.map(({ id, name, number }) => (\n      <CSSTransition\n        in\n        timeout={500}\n        classNames={transitionsStyle}\n        className={Styles.listItem}\n        key={id}\n        unmountOnExit\n      >\n        <li>\n          <span className={Styles.name}>\n            {name} : {number}\n          </span>\n          <button\n            onClick={() => onDelete(id)}\n            className={Styles.Btn}\n            type=\"button\"\n          >\n            <Icon icon={xIcon} color=\"red\" width=\"40px\" height=\"40px\" />\n          </button>\n        </li>\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nPhoneBookList.propTypes = {\n  onDelete: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string,\n    }),\n  ),\n};\n\nexport default PhoneBookList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\nimport Styles from './PhoneBookSearchField.module.css';\n\nconst PhoneBookSearchField = ({ value, onChange, isActive }) => (\n  <CSSTransition\n    in={isActive}\n    mountOnEnter\n    unmountOnExit\n    timeout={500}\n    classNames={slideTransition}\n  >\n    <div className={Styles.container}>\n      <input\n        className={Styles.searchField}\n        type=\"text\"\n        name=\"filterQuery\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Search contact...\"\n      />\n    </div>\n  </CSSTransition>\n);\n\nPhoneBookSearchField.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default PhoneBookSearchField;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\nimport Styles from './PhoneBookLogo.module.css';\n\nexport default class PhoneBookLogo extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n  };\n  state = {\n    isActive: false,\n  };\n\n  componentDidMount() {\n    setTimeout(() => this.setState({ isActive: true }), 300);\n  }\n  render() {\n    const { isActive } = this.state;\n    const { title } = this.props;\n    return (\n      <CSSTransition in={isActive} classNames={slideTransition} timeout={500}>\n        <div className={Styles.logo}>{title}</div>\n      </CSSTransition>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from 'react-toastify';\nimport Section from '../components/Section/Section';\nimport PhoneBookFields from '../components/PhoneBookFields/PhoneBookFields';\nimport PhoneBookList from '../components/PhoneBookList/PhoneBookList';\nimport PhoneBookSearchField from '../components/PhoneBookSearchField/PhoneBookSearchField';\nimport PhoneBookLogo from '../components/PhoneBookLogo/PhoneBookLogo';\n\nconst checkContactForUnique = (contactsArr, newContact) =>\n  contactsArr.some(\n    item => item.name.toLowerCase() === newContact.name.toLowerCase(),\n  );\n\nconst filterContactList = (contactsArr, query) =>\n  contactsArr.filter(item =>\n    item.name.toLowerCase().includes(query.toLowerCase()),\n  );\n\ntoast.configure();\n\nexport default class App extends Component {\n  handleSubmit = obj => {\n    const { onAddContact, phoneBookItems } = this.props;\n\n    if (checkContactForUnique(phoneBookItems, obj)) {\n      toast.error('This contact is alredy exist', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n      return false;\n    }\n\n    onAddContact({ ...obj, id: uuidv4() });\n\n    return true;\n  };\n\n  handleChange = e => {\n    const { value } = e.target;\n    this.props.onChangeQuery(value);\n  };\n\n  componentDidMount() {\n    // Getting all contact, when component is alredy mounted\n    // this.props.onInit();\n  }\n\n  render() {\n    const { phoneBookItems, onDeleteContact, filterQuery } = this.props;\n    const filteredContacts = filterContactList(phoneBookItems, filterQuery);\n    return (\n      <main>\n        <PhoneBookLogo title=\"PhoneBook\" />\n        <Section isActive>\n          <PhoneBookFields onSubmit={this.handleSubmit} />\n        </Section>\n\n        <Section title={'Contacts'} isActive={phoneBookItems.length > 0}>\n          <PhoneBookSearchField\n            isActive={phoneBookItems.length > 1}\n            value={filterQuery}\n            onChange={this.handleChange}\n          />\n\n          <PhoneBookList\n            onDelete={onDeleteContact}\n            contacts={filteredContacts}\n          />\n        </Section>\n      </main>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport * as contactsActions from '../redux/contactReducer/contactsActions';\nimport * as filterActions from '../redux/filterReducer/filterActions';\nimport App from './App';\n\nconst mapStateToProps = state => ({\n  phoneBookItems: [...state.contacts],\n  filterQuery: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: obj => dispatch(contactsActions.addContact(obj)),\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\n  onChangeQuery: text => dispatch(filterActions.changeQuery(text)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport './index.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport App from './App/AppContainer';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideTransition_enter__1_ZFG\",\"enterActive\":\"slideTransition_enterActive__1BRvI\",\"exit\":\"slideTransition_exit__2Q6p1\",\"exitActive\":\"slideTransition_exitActive__37gDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBookFields_container__3EnU5\",\"inputLabel\":\"PhoneBookFields_inputLabel__QSj-3\",\"inputField\":\"PhoneBookFields_inputField__2ek-Y\",\"inputFieldError\":\"PhoneBookFields_inputFieldError__3a2uY PhoneBookFields_inputField__2ek-Y\",\"invalidMessage\":\"PhoneBookFields_invalidMessage__2qvzv\",\"Btn\":\"PhoneBookFields_Btn__2LpxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBookList_container__3N2_v\",\"listItem\":\"PhoneBookList_listItem__1XvuD\",\"name\":\"PhoneBookList_name__SEw86\",\"Btn\":\"PhoneBookList_Btn__2CxxD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__37ABw\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBookSearchField_container__r3Qr_\",\"searchField\":\"PhoneBookSearchField_searchField__1IWvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"PhoneBookLogo_logo__1f4sl\"};"],"sourceRoot":""}