{"version":3,"sources":["redux/contactReducer/contactSlice.js","redux/filterReducer/filterSlice.js","redux/rootReducer.js","redux/store.js","components/Section/Section.js","components/PhoneBookFields/PhoneBookFields.js","components/PhoneBookList/PhoneBookList.js","components/PhoneBookSearchField/PhoneBookSearchField.js","components/PhoneBookLogo/PhoneBookLogo.js","App/App.js","App/AppContainer.js","index.js","Transitions/slideTransition.module.css","components/PhoneBookFields/PhoneBookFields.module.css","components/PhoneBookList/PhoneBookList.module.css","components/Section/Section.module.css","components/PhoneBookSearchField/PhoneBookSearchField.module.css","components/PhoneBookLogo/PhoneBookLogo.module.css"],"names":["contactSlice","createSlice","name","initialState","reducers","addContact","state","action","payload","deleteContact","filter","item","id","filterSlice","changeQuery","rootReducer","combineReducers","contacts","reducer","persistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistedReducer","persistReducer","store","configureStore","persistor","persistStore","Section","title","isActive","children","CSSTransition","in","timeout","classNames","slideTransition","mountOnEnter","unmountOnExit","className","Styles","container","validationSchema","Yup","shape","max","min","required","number","matches","PhoneBookFields","onSubmit","initialValues","values","actions","resetForm","props","touched","errors","handleChange","handleBlur","inputLabel","htmlFor","invalidMessage","inputFieldError","inputField","type","value","onChange","onBlur","placeholder","Btn","icon","checkCircle","color","width","height","PhoneBookList","onDelete","isLoading","TransitionGroup","component","map","transitionsStyle","listItem","onClick","xIcon","PhoneBookSearchField","searchField","PhoneBookLogo","setTimeout","setState","this","logo","Component","checkContactForUnique","contactsArr","newContact","some","toLowerCase","toast","configure","App","handleSubmit","obj","onAddContact","phoneBookItems","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","uuidv4","e","target","onChangeQuery","query","onDeleteContact","filterQuery","filteredContacts","includes","length","connect","dispatch","text","ReactDOM","render","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.97ead193.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst contactSlice = createSlice({\n  name: 'contacts',\n  initialState: [],\n  reducers: {\n    addContact: (state, action) => [...state, action.payload],\n    deleteContact: (state, action) =>\n      state.filter(item => item.id !== action.payload),\n  },\n});\n\nexport default contactSlice;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    changeQuery: (state, action) => action.payload,\n  },\n});\n\nexport default filterSlice;\n","import { combineReducers } from 'redux';\nimport contactSlice from './contactReducer/contactSlice';\nimport filterSlice from './filterReducer/filterSlice';\n\nconst rootReducer = combineReducers({\n  contacts: contactSlice.reducer,\n  filter: filterSlice.reducer,\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport rootReducer from './rootReducer';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['contacts'],\n};\n\n// code below need to solve problem with 'A non-serializable value'\n// link to issue https://github.com/rt2zz/redux-persist/issues/988\n\nconst defaultMiddlewareConfig = {\n  serializableCheck: {\n    ignoredActions: ['persist/PERSIST'],\n  },\n};\n\nconst middleware = [...getDefaultMiddleware(defaultMiddlewareConfig)];\n\n///////////////\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport Styles from './Section.module.css';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\n\nconst Section = ({ title = '', isActive, children }) => {\n  return (\n    <CSSTransition\n      in={isActive}\n      timeout={500}\n      classNames={slideTransition}\n      mountOnEnter\n      unmountOnExit\n    >\n      <section className={Styles.container}>\n        <h1 className={Styles.title}>{title}</h1>\n        {children}\n      </section>\n    </CSSTransition>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from '@iconify/react';\nimport { CSSTransition } from 'react-transition-group';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\nimport checkCircle from '@iconify/icons-cil/check-circle';\nimport Styles from './PhoneBookFields.module.css';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .max(20, 'Must be 20 characters or less')\n    .min(2, 'Must be 2 characters or more')\n    .required('Required'),\n  number: Yup.string()\n    .matches(\n      /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{2}(-|\\s)\\d{2}$/,\n      'Telephone number should be like: 000-00-00',\n    )\n    .required('Required'),\n});\n\nconst PhoneBookFields = ({ onSubmit }) => (\n  <>\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={(values, actions) => {\n        onSubmit(values) && actions.resetForm();\n      }}\n      validationSchema={validationSchema}\n    >\n      {props => {\n        const { values, touched, errors, handleChange, handleBlur } = props;\n        return (\n          <Form className={Styles.container}>\n            <label className={Styles.inputLabel} htmlFor=\"name\">\n              Name\n            </label>\n\n            <CSSTransition\n              in={errors.name && touched.name}\n              classNames={slideTransition}\n              timeout={500}\n              mountOnEnter\n              unmountOnExit\n            >\n              <div className={Styles.invalidMessage}>{errors.name}</div>\n            </CSSTransition>\n\n            <Field\n              className={\n                errors.name && touched.name\n                  ? Styles.inputFieldError\n                  : Styles.inputField\n              }\n              type=\"text\"\n              value={values.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              name=\"name\"\n              placeholder=\"Put contact name\"\n            />\n\n            <label className={Styles.inputLabel} htmlFor=\"number\">\n              Number\n            </label>\n\n            {\n              <CSSTransition\n                in={errors.number && touched.number}\n                classNames={slideTransition}\n                timeout={500}\n                mountOnEnter\n                unmountOnExit\n              >\n                <div className={Styles.invalidMessage}>{errors.number}</div>\n              </CSSTransition>\n            }\n\n            <Field\n              className={\n                errors.number && touched.number\n                  ? Styles.inputFieldError\n                  : Styles.inputField\n              }\n              value={values.number}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Number format 000-00-00\"\n            />\n            <button type=\"submit\" className={Styles.Btn}>\n              <Icon\n                icon={checkCircle}\n                color=\"blue\"\n                width=\"70px\"\n                height=\"50px\"\n              />\n            </button>\n          </Form>\n        );\n      }}\n    </Formik>\n  </>\n);\n\nPhoneBookFields.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default PhoneBookFields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Icon } from '@iconify/react';\nimport xIcon from '@iconify/icons-cil/x';\nimport Styles from './PhoneBookList.module.css';\nimport transitionsStyle from '../../Transitions/slideTransition.module.css';\n\nconst PhoneBookList = ({ onDelete, contacts, isLoading }) => (\n  <TransitionGroup component=\"ul\" className={Styles.container}>\n    {contacts.map(({ id, name, number }) => (\n      <CSSTransition\n        in\n        timeout={500}\n        classNames={transitionsStyle}\n        className={Styles.listItem}\n        key={id}\n        unmountOnExit\n      >\n        <li>\n          <span className={Styles.name}>\n            {name} : {number}\n          </span>\n          <button\n            onClick={() => onDelete(id)}\n            className={Styles.Btn}\n            type=\"button\"\n          >\n            <Icon icon={xIcon} color=\"red\" width=\"40px\" height=\"40px\" />\n          </button>\n        </li>\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nPhoneBookList.propTypes = {\n  onDelete: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string,\n    }),\n  ),\n};\n\nexport default PhoneBookList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\nimport Styles from './PhoneBookSearchField.module.css';\n\nconst PhoneBookSearchField = ({ value, onChange, isActive }) => (\n  <CSSTransition\n    in={isActive}\n    mountOnEnter\n    unmountOnExit\n    timeout={500}\n    classNames={slideTransition}\n  >\n    <div className={Styles.container}>\n      <input\n        className={Styles.searchField}\n        type=\"text\"\n        name=\"filterQuery\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Search contact...\"\n      />\n    </div>\n  </CSSTransition>\n);\n\nPhoneBookSearchField.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default PhoneBookSearchField;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\nimport Styles from './PhoneBookLogo.module.css';\n\nexport default class PhoneBookLogo extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n  };\n  state = {\n    isActive: false,\n  };\n\n  componentDidMount() {\n    setTimeout(() => this.setState({ isActive: true }), 300);\n  }\n  render() {\n    const { isActive } = this.state;\n    const { title } = this.props;\n    return (\n      <CSSTransition in={isActive} classNames={slideTransition} timeout={500}>\n        <div className={Styles.logo}>{title}</div>\n      </CSSTransition>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from 'react-toastify';\nimport Section from '../components/Section/Section';\nimport PhoneBookFields from '../components/PhoneBookFields/PhoneBookFields';\nimport PhoneBookList from '../components/PhoneBookList/PhoneBookList';\nimport PhoneBookSearchField from '../components/PhoneBookSearchField/PhoneBookSearchField';\nimport PhoneBookLogo from '../components/PhoneBookLogo/PhoneBookLogo';\n\nconst checkContactForUnique = (contactsArr, newContact) =>\n  contactsArr.some(\n    item => item.name.toLowerCase() === newContact.name.toLowerCase(),\n  );\n\nconst filterContactList = (contactsArr, query) =>\n  contactsArr.filter(item =>\n    item.name.toLowerCase().includes(query.toLowerCase()),\n  );\n\ntoast.configure();\n\nexport default class App extends Component {\n  handleSubmit = obj => {\n    const { onAddContact, phoneBookItems } = this.props;\n\n    if (checkContactForUnique(phoneBookItems, obj)) {\n      toast.error('This contact is alredy exist', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n      return false;\n    }\n\n    onAddContact({ ...obj, id: uuidv4() });\n\n    return true;\n  };\n\n  handleChange = e => {\n    const { value } = e.target;\n    this.props.onChangeQuery(value);\n  };\n\n  render() {\n    const { phoneBookItems, onDeleteContact, filterQuery } = this.props;\n    const filteredContacts = filterContactList(phoneBookItems, filterQuery);\n    return (\n      <main>\n        <PhoneBookLogo title=\"PhoneBook\" />\n        <Section isActive>\n          <PhoneBookFields onSubmit={this.handleSubmit} />\n        </Section>\n\n        <Section title={'Contacts'} isActive={phoneBookItems.length > 0}>\n          <PhoneBookSearchField\n            isActive={phoneBookItems.length > 1}\n            value={filterQuery}\n            onChange={this.handleChange}\n          />\n\n          <PhoneBookList\n            onDelete={onDeleteContact}\n            contacts={filteredContacts}\n          />\n        </Section>\n      </main>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport contactSlice from '../redux/contactReducer/contactSlice';\nimport filterSlice from '../redux/filterReducer/filterSlice';\nimport App from './App';\n\nconst mapStateToProps = state => ({\n  phoneBookItems: [...state.contacts],\n  filterQuery: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: obj => dispatch(contactSlice.actions.addContact(obj)),\n  onDeleteContact: id => dispatch(contactSlice.actions.deleteContact(id)),\n  onChangeQuery: text => dispatch(filterSlice.actions.changeQuery(text)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistor } from './redux/store';\n\nimport { store } from './redux/store';\nimport './index.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport App from './App/AppContainer';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideTransition_enter__1_ZFG\",\"enterActive\":\"slideTransition_enterActive__1BRvI\",\"exit\":\"slideTransition_exit__2Q6p1\",\"exitActive\":\"slideTransition_exitActive__37gDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBookFields_container__3EnU5\",\"inputLabel\":\"PhoneBookFields_inputLabel__QSj-3\",\"inputField\":\"PhoneBookFields_inputField__2ek-Y\",\"inputFieldError\":\"PhoneBookFields_inputFieldError__3a2uY PhoneBookFields_inputField__2ek-Y\",\"invalidMessage\":\"PhoneBookFields_invalidMessage__2qvzv\",\"Btn\":\"PhoneBookFields_Btn__2LpxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBookList_container__3N2_v\",\"listItem\":\"PhoneBookList_listItem__1XvuD\",\"name\":\"PhoneBookList_name__SEw86\",\"Btn\":\"PhoneBookList_Btn__2CxxD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__37ABw\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBookSearchField_container__r3Qr_\",\"searchField\":\"PhoneBookSearchField_searchField__1IWvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"PhoneBookLogo_logo__1f4sl\"};"],"sourceRoot":""}